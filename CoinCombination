import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
/**
 * Print all the Combinations of Change for a given Amount
 */
class CoinChange {

    private static List<Integer> coins;
    private static int count=0;

    /**
     * Initialising the Coing Denominations
     */
    private static void init() {
        coins = new ArrayList<Integer>();
       // coins.add(1);
        coins.add(4);
        coins.add(3);
        coins.add(5);
        coins.add(9);
        //coins.add(50);
    }

    /**
     * Prints all comninations of the coin change
     */
    public static void coinCombinations(int amount,int index,LinkedList<Integer> list)
    {
        if(amount==0)
        {
            count++;
         //   System.out.println("Result" + list.toString());
            return ;
        }

        if(amount < 0)
            return ;

        for(int i=index ; i < coins.size();i++)
        {
            int coin = coins.get(i);
          //  if(amount >= coin)
            if(amount-coin>=0)
            {
                list.add(coin);
              //  System.out.println("Before" + list);
                coinCombinations(amount - coin ,i,list );
                System.out.println("After" + list);

                list.removeLast();


            }
        }
    }

    public static void main(String[] args) {
        int amount = 5;
       init();
       LinkedList<Integer> temp = new LinkedList<>();
       // coinCombinations(amount,0,new LinkedList<Integer>());
        coinCombinations(amount,0, temp);

        System.out.println("Number of Combinations :" + count);
    }
}
